1. Speed-wise, an algorithm that has O(1) efficiency is a Ferrari whereas an
algorithm that has an efficiency of O(2^n) is a Prius.

2. The best-case scenario for binary search would be O(1) or constant time,
but it would take some great guessing to accomplish.

3. The worst-case scenario for binary search would be O(log n) or
logarithmic time, which is still relatively quick.

4. The average-case scenario for binary search would also be O(log n),
since the nature of the search is still based on halving the data set at
each iteration.

5. done

6. infinity

7. O(log n) or logarithmic

8. Done. Worst-case number of iterations will always be equal to n in this
scenario.

9. Pertaining to the graph, worst-case of this table is O(n) or linear
complexity.

10. Big-O of binary search is O(log n).

11. Big-Omega of binary search is O(1).

12. Big-Theta of binary search is O(log n).
